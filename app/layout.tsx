// app/layout.tsx
import type { Metadata } from 'next';
import './globals.css';
import './layout.css'; // Import the new CSS file
import { Suspense } from 'react';
import { UserProvider } from './_lib/UserContext';
import { headers } from 'next/headers';
import Nav from './components/Nav'; // Import the Nav component

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

async function getUser() {
  const headersList = await headers(); // Await headers()
  const userHeader = headersList.get('x-user'); // Now get() is available
  if (userHeader) {
    return JSON.parse(userHeader) as { id: string; name: string; email: string };
  }
  return null; // Middleware should redirect, so this is a fallback
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const user = await getUser();

  return (
    <html lang="en">
      <body>
        <UserProvider user={user}>
          <Nav user={user} /> {/* Pass user to Nav component */}
          <main className="main-content">
            <Suspense fallback={<Loading />}>
              <div>{children}</div>
            </Suspense>
          </main>
        </UserProvider>
      </body>
    </html>
  );
}

function Loading() {
  return <div className="loading">Loading Layout...</div>;
}